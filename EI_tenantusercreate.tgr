trigger EI_tenantusercreate on Deposit__c (before insert,after insert, before update,after update) {
  // putting a check in trigger 24 June 2021 by Tajinder
  if(EI_utility.flagForTrigger)
  {
      return;
  }
    QueryLimits__c querylimit = QueryLimits__c.getValues('All Limits'); 
    if(querylimit.CheckOn__c) {
        List<Deposit__c> updateddepositlist = new  List<deposit__c> ();
        List<Deposit__c> depositList = new  List<deposit__c> ();
        Integer noOfDeposit = 0;
        
        if(Trigger.isBefore && Trigger.isInsert) {             
            EI_repaidreasonhandler.repaidReasonStatus1(trigger.new); 
        }
        
        if(Trigger.isAfter && Trigger.isInsert) {
            // To track the Deposit Status History
            EI_SdsColleagueChangesCaseStatus.depositStatusHistoryOnInsert(trigger.new, trigger.newMap); 
        }
        
        if(Trigger.isBefore && Trigger.isupdate) {           
            EI_repaidreasonhandler.repaidReasonStatus(trigger.new); 
            EI_repaidreasonhandler.repaidReasonStatus2(trigger.new, trigger.oldMap);
            
            // To track the Deposit Status History
            EI_SdsColleagueChangesCaseStatus.depositStatusHistoryOnUpdate(trigger.new, trigger.newMap, trigger.oldMap); 
        }
        
        if (Trigger.isAfter && Trigger.isUpdate) {
            set<Id> depoIDListForDPC = new set<Id>();// Trigger code change NPP 683
            for (Deposit__c dep : trigger.new) {      
                depositList.add(dep);  
                if((dep.Status__c=='Deposits held by scheme') && (Trigger.oldMap.get(dep.Id).Status__c !=dep.Status__c ) /*&& (dep.User_Activated__c==false)*/) {
                   updateddepositlist.add(dep);
                   // Trigger code change NPP 683 EI_tenantusercreatehandler.createuserNew(updateddepositlist,Trigger.newMap.keySet());  
                   // Trigger code change NPP 683 EI_DPCCertificate.saveDpcCertificate(dep.id);
                   // Trigger code change NPP 683
                   depoIDListForDPC.add(dep.Id);
                }
                // Trigger code change NPP 683 start
              
               
                // Trigger code change NPP 683 end
                // System.debug(dep.Active__c);
            }
            if(!updateddepositlist.isEmpty()){              
                EI_tenantusercreatehandler.createuserNew(updateddepositlist,depoIDListForDPC);  
            }
            //if(!depoIDListForDPC.isEmpty()){
              //  database.executeBatch(new EI_DPCCetificateToAzureQueueable(depoIDListForDPC), 100);
            //}
            if(depositList.size()>0) {
                  if(!EI_checkRecursive.firstcall) {

                UpdateNumberOfDeposit.updateProperty(depositList);
                      EI_checkRecursive.firstcall = true;
                  }
            }
            EI_tenantusercreatehandler.deactivateProperty(trigger.new, trigger.newMap, trigger.oldMap);
            
        }
        
        /*Commented this code because we are not uploading DPC/PI to Azure
         *  if(Trigger.isAfter && Trigger.isInsert){
             set<Id> depoIDListForPI = new set<Id>();
             for(Deposit__c dep : trigger.new){  
                 if(!(System.isBatch() || System.isFuture())){
                     depoIDListForPI.add(dep.Id);
                 }
             }
             if(!depoIDListForPI.isEmpty()){
                 System.enqueueJob(new EI_PICetificateToAzureQueueable(depoIDListForPI));
             }
             // Trigger code change NPP 683 end
        }*/
        
    }
}